generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  password    String?
  name        String?
  phone       Int?
  isAnonymous Boolean     @default(false)
  role        String      @default("user")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  complaints  Complaint[]
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  email     String   @unique
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Complaint {
  id             Int       @id @default(autoincrement())
  transport      Transport
  issueType      IssueType
  vehicleNo      String
  location       String
  dateOfIncident DateTime
  description    String
  mediaFiles     Json?
  isAnonymous    Boolean   @default(false)
  contactName    String    @default("Anonymous")
  contactEmail   String    @default("Anonymous")
  status         Status    @default(pending)
  submittedAt    DateTime  @default(now())
  inProgressAt   DateTime?
  resolvedAt     DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  userId         Int
  remark         Remark[]
  // remarkId       Int?      @unique
  // remark         Remark?   @relation(fields: [remarkId], references: [id])
  user           User      @relation(fields: [userId], references: [id])
}

model Remark {
  id        Int        @id @default(autoincrement())
  text      String
  addedBy   String
  createdAt DateTime   @default(now())
  complaintId Int  
  complaint Complaint @relation(fields: [complaintId], references: [id])    
}

enum Transport {
  Bus
  Train
  Metro
  Other
}

enum Status {
  pending
  in_progress
  resolved
}

enum IssueType {
  busdelay
  Overcrowding
  RudeStaff
  UncleanVehicle
  FaultyAC
  Other
}

